service: cndp-order-service

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource:
        Fn::GetAtt:
          - Table
          - Arn
    - Effect: Allow
      Action:
        - kinesis:PutRecords
      Resource: ${self:custom.streamArn}
  environment:
    ACCOUNT_NAME: ${opt:acct}
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_STAGE: ${opt:stage}
    SERVERLESS_REGION: ${opt:region}
    DEBUG: ${env:DEBUG, self:custom.debug}

plugins:
  - serverless-webpack
  - baton-vcr-serverless-plugin
  - serverless-offline

functions:
  submit:
    handler: src/submit.handle
    events:
      - http:
          path: orders/{id}/submit
          method: put
    environment:
      TABLE_NAME: ${self:custom.tableName}
  get:
    handler: src/get.handle
    events:
      - http:
          path: orders/{id}
          method: get
    environment:
      TABLE_NAME: ${self:custom.tableName}
  trigger:
    handler: src/trigger.handle
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - Table
              - StreamArn
          batchSize: 100
          startingPosition: TRIM_HORIZON
    environment:
      STREAM_NAME: ${self:custom.streamName}
  # listener:
  #   handler: src/listener.handle
  #   events:
  #     - stream:
  #         type: kinesis
  #         arn: ${self:custom.streamArn}
  #         batchSize: 100
  #         startingPosition: TRIM_HORIZON
  #   environment:
  #     STREAM_NAME: ${self:custom.streamName}
  #     TABLE_NAME: ${self:custom.tableName}

custom:
  debug: '*'
  tableName: ${opt:stage}-${self:service}-orders
  streamName: ${cf:cndp-event-service-${opt:stage}.streamName}
  streamArn: ${cf:cndp-event-service-${opt:stage}.streamArn}

resources:
  Resources:
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
